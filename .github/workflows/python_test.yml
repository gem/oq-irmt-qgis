name: QGIS unit and integration test
on:
  push:
jobs:
  Matrix-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-18.04, ubuntu-20.04]
        #python-version: [3.6, 3.7, 3.8]
        python-version: [3.8]
    env:
      GITHUB_PULL_REQUEST: ${{ github.event.number }}
      GITHUB_DEF_BR:  ${{ github.event.repository.default_branch }}
      GITHUB_REF:  ${{ github.ref }}
      GITHUB_HD_REF:  ${{ github.head_ref }}
      GITHUB_BS_REF:  ${{ github.base_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clone engine and restore oqdata and run test and finally make doc
        run: |
          set -x
          echo " Check if this is a pull request or not"
          if [ -z "$GITHUB_HD_REF" ]
             then
              echo " Is not a pull request, use branch: $GITHUB_DEF_BR"
              GITHUB_BR=`echo ${{ github.event.repository.default_branch }}`
             else
              echo " Is a pull request, use branch: $GITHUB_HD_BR"
              GITHUB_BR=`echo ${{ github.head_ref }}`
          fi
          git clone -b $GITHUB_BR --depth=1 https://github.com/gem/oq-engine.git
          PY_VER=`echo py${{ matrix.python-version }} | tr -d .`
          echo $PY_VER
          cd oq-engine
          pip3 install -r requirements-$PY_VER-linux64.txt
          pip3 install -e .
          cd ..
          echo "Dump for $GITHUB_BR branch "
          curl -sfLO https://artifacts.openquake.org/travis/oqdata-${GITHUB_BR}.zip
          mkdir ~/oqdata
          oq restore oqdata-${GITHUB_BR}.zip ~/oqdata
          oq webui start 0.0.0.0:8800 --skip-browser &> webui.log
          cat webui.log
          #
          docker run -d --name qgis -v /tmp/.X11-unix:/tmp/.X11-unix -v `pwd`:/tests_directory -e DISPLAY=:99 -e GEM_QGIS_TEST=y qgis/qgis:release-3_10
          docker exec qgis bash -c "apt update --allow-releaseinfo-change; DEBIAN_FRONTEND=noninteractive apt install -y python3-scipy python3-matplotlib python3-pyqt5.qtwebkit"
          docker exec qgis bash -c "python3 -m pip install pytest"
          # OGR_SQLITE_JOURNAL=delete prevents QGIS from using WAL, which modifies geopackages even if they are just read
          echo "Run unit test"
          docker exec qgis bash -c "export PYTHONPATH=/usr/share/qgis/python/plugins/:$PYTHONPATH; OGR_SQLITE_JOURNAL=delete pytest -v /tests_directory/svir/test/unit/"
          echo "Run Integration test"
          docker exec qgis sh -c "git clone -q -b $GITHUB_BR --depth=1 https://github.com/gem/oq-engine.git && echo 'Running against oq-engine/$GITHUB_BR'"
          docker exec qgis sh -c "qgis_setup.sh svir"
          docker exec qgis sh -c "cd /tests_directory && qgis_testrunner.sh svir.test.integration.test_drive_oq_engine"
          echo "make doc"
          docker exec qgis sh -c "apt update --allow-releaseinfo-change; DEBIAN_FRONTEND=noninteractive apt install -y latexmk texlive-latex-extra python3-matplotlib python3-sphinx python3-sphinx-rtd-theme dvipng"
          docker exec qgis sh -c "export PYTHONPATH=$PYTHONPATH:/oq-irmt-qgis; cd /oq-irmt-qgis/svir; make doc"
          echo "Display Web UI log"
          cat webui.log
