name: QGIS LTR integration tests IRMT vs Engine (LTR and latest)
on:
  # NOTE: enables only scheduled or triggered manually, NOT on pull requests
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref
        default: master
        required: true
  # push:
  #   branches:
  #     - '**'
  schedule:
    - cron: "0 2 * * *"

jobs:
  Tests_and_docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # FIXME: it would be better to point to lts and latest if possible
        # RELEASE_VERSION: ['3.16', '3.18', 'master']
        # FIXME: there seems to be an actual incompatibility between IRMT 3.16 and Engine 3.16
        # Unable to extract http://172.17.0.1:8800/v1/calc/27/extract/agg_curves with parameters {'kind': 'rlzs', 'NAME_1': 'East', 'taxonomy': 'Adobe', 'loss_type': 'structural', 'absolute': True} (Internal Server Error):
        # ValueError: 'East,Adobe' is not in list in /v1/calc/27/extract/agg_curves?kind=rlzs&NAME_1=East&taxonomy=Adobe&loss_type=structural&absolute=True
        #   File "/home/runner/openquake/lib/python3.10/site-packages/openquake/server/views.py", line 820, in extract
        #     obj = _extract(ds, what + query_string)
        #   File "/home/runner/openquake/lib/python3.10/site-packages/openquake/calculators/extract.py", line 201, in __call__
        #     data = self[k](dstore, v)
        #   File "/home/runner/openquake/lib/python3.10/site-packages/openquake/calculators/extract.py", line 746, in extract_agg_curves
        #     agg_id = lst.index(','.join(tagvalues))
        # NOTE: checking also master to make sure risk workshop demos keep working also on master
        # RELEASE_VERSION: ['3.18', 'master']
        RELEASE_VERSION: ['3.18']
        # QGIS_DOCKER_VERSION: ['qgis/qgis:final-3_8_3', 'qgis/qgis:release-3_28', 'qgis/qgis:latest']
        # NOTE: keep it updated with QGIS ltr
        QGIS_DOCKER_VERSION: ['qgis/qgis:release-3_28']
        # DEMOS: ['oqdata', 'risk-oqdata']
        DEMOS: ['risk-oqdata']
    steps:
      - uses: actions/checkout@v2
      - name: üêç Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: ‚è≥ Clone engine and restore oqdata and docker container
        run: |
          set -x
          ENGINE_RELEASE=${{ matrix.RELEASE_VERSION }}
          if [ "${{ matrix.RELEASE_VERSION }}" != "master" ]; then
            IRMT_BR=engine-${ENGINE_RELEASE}
          else
            IRMT_BR=${ENGINE_RELEASE}
          fi
          ENGINE_BR=$IRMT_BR
          curl -O https://raw.githubusercontent.com/gem/oq-engine/master/install.py
          ls -lrt install.py
          echo ${ENGINE_BR}
          if [ "$(git ls-remote --heads https://github.com/gem/oq-engine.git ${ENGINE_BR})" = "" ]; then
              exit 1
          fi
          python3 install.py user --version=${ENGINE_RELEASE}
          export PIP_DEFAULT_TIMEOUT=100
          echo "Restore ${{matrix.DEMOS}} demos for $ENGINE_BR branch "
          source $HOME/openquake/bin/activate
          oq reset -y
          oq restore https://artifacts.openquake.org/travis/${{matrix.DEMOS}}-${ENGINE_BR}.zip ~/oqdata
          oq webui start 172.17.0.1:8800 --skip-browser &> webui.log &
          echo "Waiting WEBUI up on port 8800...."
          while ! nc -z 172.17.0.1 8800; do
            sleep 5
          done
          curl http://172.17.0.1:8800/v1/engine_version
          #
          DOCKER_HOST=`ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+'`
          ENGINE_HOST=`echo http://$DOCKER_HOST:8800`
          # NOTE: release-3_28 needs to be kept updated to the current LTS
          docker run -d --name qgis -v /tmp/.X11-unix:/tmp/.X11-unix -v `pwd`:/tests_directory -e DISPLAY=:99  -e OQ_ENGINE_HOST='http://172.17.0.1:8800' \
          -e BRANCH="$IRMT_BR" -e ONLY_CALC_ID="$ONLY_CALC_ID" -e ONLY_OUTPUT_TYPE="$ONLY_OUTPUT_TYPE"  -e GEM_QGIS_TEST=y ${{ matrix.QGIS_DOCKER_VERSION }}
          docker exec qgis bash -c "apt update --allow-releaseinfo-change; DEBIAN_FRONTEND=noninteractive apt install -y python3-scipy python3-matplotlib python3-pyqt5.qtwebkit"
          docker exec qgis bash -c "python3 -m pip install pytest"
          # OGR_SQLITE_JOURNAL=delete prevents QGIS from using WAL, which modifies geopackages even if they are just read
      - name: ‚®ï Run Integration test
        run: |
          set -x
          IRMT_BR=engine-${{ matrix.RELEASE_VERSION }}
          ENGINE_BR=$IRMT_BR
          if [ "${{ matrix.DEMOS }}" != "risk-oqdata" ]; then
            OQ_CHECK_MISSING_OUTPUTS=1
            OQ_TEST_RUN_CALC=1
          else
            OQ_CHECK_MISSING_OUTPUTS=0
            OQ_TEST_RUN_CALC=0
          fi
          echo "OQ_CHECK_MISSING_OUTPUTS: ${OQ_CHECK_MISSING_OUTPUTS}"
          echo "OQ_TEST_RUN_CALC: ${OQ_TEST_RUN_CALC}"
          # NOTE: the check on the existence of the engine branch is already done in the previous step
          docker exec qgis sh -c "echo 'Running against oq-engine on branch $GITHUB_BR'"
          # docker exec -e OQ_CHECK_MISSING_OUTPUTS="${OQ_CHECK_MISSING_OUTPUTS}" qgis sh -c "env"
          docker exec qgis sh -c "export OQ_CHECK_MISSING_OUTPUTS=${OQ_CHECK_MISSING_OUTPUTS} && export OQ_TEST_RUN_CALC=${OQ_TEST_RUN_CALC}"
          docker exec qgis sh -c "qgis_setup.sh svir"
          docker exec -t qgis sh -c "env && cd /tests_directory && qgis_testrunner.sh svir.test.integration.test_drive_oq_engine"
      - name: „èí Display web logs
        run: |
          set -x
          cat webui.log
