name: QGIS LTR integration tests IRMT vs Engine (LTR and latest)
on:
  # FIXME: enable only scheduled or triggered manually
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref
        default: master
        required: true
  push:
    branches:
      - '**'
  schedule:
    - cron: "0 2 * * *"

jobs:
  Tests_and_docs:
    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   matrix:
    #     os:
    #       - ubuntu-latest
    #       - windows-latest
    #       - macos-latest
    strategy:
      matrix:
        # FIXME: it would be better to point to lts and latest if possible
        RELEASE_VERSION: [engine-3.16, engine-3.18]
    # env:
    #   RELEASE_VERSION: engine-3.16
    steps:
      - uses: actions/checkout@v2
      - name: üêç Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: ‚è≥ Clone engine and restore oqdata and docker container
        run: |
          set -x
          IRMT_BR=${{ matrix.RELEASE_VERSION }}
          ENGINE_BR=$IRMT_BR
          curl -O https://raw.githubusercontent.com/gem/oq-engine/master/install.py
          ls -lrt install.py
          echo ${branch}
          if [ "$(git ls-remote --heads https://github.com/gem/oq-engine.git ${ENGINE_BR})" == "" ]; then
              exit 1
          fi
          python3 install.py user --version=${branch}
          PY_VER=`echo py${{ matrix.python-version }} | tr -d .`
          echo $PY_VER
          export PIP_DEFAULT_TIMEOUT=100
          echo "Restore OQ-Engine demos for $ENGINE_BR branch "
          source $HOME/openquake/bin/activate
          oq reset -y
          oq restore https://artifacts.openquake.org/travis/oqdata-${ENGINE_BR}.zip ~/oqdata
          oq webui start 172.17.0.1:8800 --skip-browser &> webui.log &
          echo "Waiting WEBUI up on port 8800...."
          while ! nc -z 172.17.0.1 8800; do
            sleep 5
          done
          curl http://172.17.0.1:8800/v1/engine_version
          #
          DOCKER_HOST=`ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+'`
          ENGINE_HOST=`echo http://$DOCKER_HOST:8800`
          docker run -d --name qgis -v /tmp/.X11-unix:/tmp/.X11-unix -v `pwd`:/tests_directory -e DISPLAY=:99  -e OQ_ENGINE_HOST='http://172.17.0.1:8800' \
          # NOTE: release-3_28 needs to be kept updated to the current LTS
          -e BRANCH="$IRMT_BR" -e ONLY_CALC_ID="$ONLY_CALC_ID" -e ONLY_OUTPUT_TYPE="$ONLY_OUTPUT_TYPE"  -e GEM_QGIS_TEST=y qgis/qgis:release-3_28
          docker exec qgis bash -c "apt update --allow-releaseinfo-change; DEBIAN_FRONTEND=noninteractive apt install -y python3-scipy python3-matplotlib python3-pyqt5.qtwebkit"
          docker exec qgis bash -c "python3 -m pip install pytest"
          # OGR_SQLITE_JOURNAL=delete prevents QGIS from using WAL, which modifies geopackages even if they are just read
      - name: ‚®ï Run Integration test
        run: |
          set -x
          IRMT_BR=${{ matrix.RELEASE_VERSION }}
          ENGINE_BR=$IRMT_BR
          docker exec qgis sh -c "git clone -q -b $ENGINE_BR --depth=1 https://github.com/gem/oq-engine.git && echo 'Running against oq-engine/$GITHUB_BR'"
          docker exec qgis sh -c "qgis_setup.sh svir"
          docker exec -t qgis sh -c "cd /tests_directory && qgis_testrunner.sh svir.test.integration.test_drive_oq_engine"
      - name: „èí Display web logs
        run: |
          set -x
          cat webui.log
